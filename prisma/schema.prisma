datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  firstName     String?
  lastName      String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quiz      Quiz[]
  quizId    String?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model ExamType {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  exams     Exam[]
  examCount Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ExamLevel {
  ASSOCIATE
  PROFESSIONAL
  EXPERT
}

model Exam {
  id         String     @id @default(cuid())
  name       String
  slug       String     @unique
  examTypeId String
  examType   ExamType   @relation(fields: [examTypeId], references: [id])
  examLevel  ExamLevel  @default(ASSOCIATE)
  questions  Question[]
}

model Quiz {
  id        String     @id @default(cuid())
  userId    String
  topic     String
  timeEnded DateTime?
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions Question[]

  @@index([userId], name: "userId")
}

model Question {
  id         String  @id @default(cuid())
  question   String
  answer     String
  isCorrect  Boolean
  options    Json //for mcq questions
  userAnswer String

  quizId String
  quiz   Quiz    @relation(fields: [quizId], references: [id], onDelete: Cascade)
  examId String?
  Exam   Exam?   @relation(fields: [examId], references: [id])

  @@index([quizId], name: "quizId")
}
